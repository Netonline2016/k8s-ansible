---
- name: Transfer kubernetes binary to nodes, for the independent minion node
  synchronize: src={{ certiTempDir }}/{{ item }} dest={{ binDir }}
  with_items:
    - kubelet
    - kube-proxy

- name: Create kubernetes/ssl directory, for the independent minion node
  file: path={{ item }} owner=root group=root mode=0755 state=directory
  with_items:
    - "{{ bootstrapSSLDir }}"
    - "{{ proxySSLDir }}"

- name: Transfer minion related certificate to nodes, for the independent minion node
  copy: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode={{ item.mode }}
  with_items:
    # using the admin.kubeconfig instead of bootstrap.kubeconfig, then the kubelet node will skip the pending status
    - { src: '{{ adminTempDir }}/temp/admin.conf', dest: '{{ bootstrapSSLDir }}/kubelet.kubeconfig', mode: '0600' }
    # proxy*.pem is option, key is the *.kubeconfig 
    - { src: '{{ minionTempDir }}/temp/proxy.pem', dest: '{{ proxySSLDir }}', mode: '0644' }
    - { src: '{{ minionTempDir }}/temp/proxy-key.pem', dest: '{{ proxySSLDir }}', mode: '0600' }
    # not necessary, if there is a kubelet.kubeconfig has been generated by admin.conf
    - { src: '{{ masterTempDir }}/temp/bootstrap.kubeconfig', dest: '{{ bootstrapSSLDir }}', mode: '0644' }
    - { src: '{{ masterTempDir }}/temp/proxy.kubeconfig', dest: '{{ proxySSLDir }}', mode: '0644' }

- name: Transfer *.service and *.conf to nodes
  template: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode=0644
  with_items:
    - { src: '{{ minionTempDir }}/kubelet.service.j2', dest: '/usr/lib/systemd/system/kubelet.service' }
    - { src: '{{ minionTempDir }}/kubelet.conf.j2', dest: '{{ kubeDir }}/kubelet.conf' }
    - { src: '{{ minionTempDir }}/kube-proxy.service.j2', dest: '/usr/lib/systemd/system/kube-proxy.service' }
    - { src: '{{ minionTempDir }}/kube-proxy.conf.j2', dest: '{{ kubeDir }}/kube-proxy.conf' }

- name: Create minion data directory
  file: path={{ item }} owner=root group=root mode=0755 state=directory
  with_items:
    - /var/lib/kubelet
    - /var/lib/kube-proxy

- name: Create log directory
  file: path={{ logDir }}/{{ item }} owner=root group=root mode=0755 state=directory
  with_items:
    - kubelet
    - proxy

- name: Started kubelet/kube-proxy
  service: name={{ item }} state=started enabled=yes daemon_reload=yes
  with_items:
    - kubelet
    - kube-proxy
